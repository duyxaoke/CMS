
@{
    ViewData["Title"] = "Phân quyền";
}
<style>
    ul {
        list-style-type: none;
    }
</style>
<div class="col-xs-12" ng-controller="IndexController" ng-cloak>
    <div class="card">
        <div class="card-header">
            <div class="card-actions">
                <button type="button" class="card-action card-toggler" title="Collapse"></button>
            </div>
            <strong>Phân quyền</strong>
        </div>
        <div class="card-body">
            <button type="button" class="btn btn-primary btn-sm pull-right" style="margin-bottom:15px" ng-click="Create()"><i class="icon icon-plus-circle"></i> Thêm mới</button>
            <div class="clearfix"></div>
            <table id="tblData" class="table table-bordered table-striped table-hover table-nowrap dataTable no-footer dtr-inline" cellspacing="0" width="100%"></table>
        </div>
    </div>
    <!-- Large modal -->
    <div id="PnModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="PnModalLabel" aria-hidden="true">
        <!-- .modal-dialog -->
        <div class="modal-dialog" role="document">
            <!-- .modal-content -->
            <div class="modal-content">
                <!-- .modal-header -->
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">{{ UpdateMode ? "Cập nhật" : "Thêm mới" }}</h4>
                </div>
                <!-- /.modal-header -->
                <!-- .modal-body -->
                <!-- form .needs-validation -->
                <form id="frmModal" name="frmModal" class="needs-validation" novalidate="">
                    <!-- /form .needs-validation -->
                    <div class="modal-body">
                        <div class="form-group">
                            <label>
                                Tên phân quyền
                            </label>
                            <input type="text" class="form-control" ng-model="Role.Name" required="">
                        </div>
                    </div>
                    <!-- /.modal-body -->
                    <!-- .modal-footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-light" data-dismiss="modal">Đóng</button>
                        <button type="submit" class="btn btn-primary" ng-disabled="frmModal.$invalid" ng-click="Save()">{{ UpdateMode ? "Cập nhật" : "Thêm" }}</button>
                    </div>
                </form>
                <!-- /.modal-footer -->
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
    <!-- Menu in role modal -->
    <div id="MenuInRoleModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="MenuInRoleLabel" aria-hidden="true">
        <!-- .modal-dialog -->
        <div class="modal-dialog" role="document">
            <!-- .modal-content -->
            <div class="modal-content">
                <!-- .modal-header -->
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Cập nhật menu thuộc role</h4>
                </div>
                <!-- /.modal-header -->
                <!-- .modal-body -->
                <!-- form .needs-validation -->
                <form id="frmMenuInRoleModal" name="frmMenuInRoleModal" class="needs-validation" novalidate="">
                    <!-- /form .needs-validation -->
                    <div class="modal-body">
                        <ul>
                            <li ng-repeat="item in MenuInRole" ng-if="item.Childrens.length > 0">
                                <label class="custom-control custom-control-primary custom-checkbox">
                                    <input class="custom-control-input" type="checkbox" id="{{item.Id}}" ng-checked="item.Checked" value="{{item.Id}}" ng-model="item.Checked">
                                    <span class="custom-control-indicator"></span>
                                    <span class="custom-control-label">{{item.Name}}</span>
                                </label>
                                <ul>
                                    <li ng-repeat="itemChild in item.Childrens">
                                        <label class="custom-control custom-control-primary custom-checkbox">
                                            <input class="custom-control-input" type="checkbox" id="{{itemChild.Id}}" ng-checked="itemChild.Checked" value="{{itemChild.Id}}" ng-model="itemChild.Checked">
                                            <span class="custom-control-indicator"></span>
                                            <span class="custom-control-label">{{itemChild.Name}}</span>
                                        </label>
                                    </li>
                                </ul>

                            </li>
                            <li ng-repeat="item in MenuInRole" ng-if="item.Childrens.length == 0">
                                <label class="custom-control custom-control-primary custom-checkbox">
                                    <input class="custom-control-input" type="checkbox" id="{{item.Id}}" ng-checked="item.Checked" value="{{item.Id}}" ng-model="item.Checked">
                                    <span class="custom-control-indicator"></span>
                                    <span class="custom-control-label">{{item.Name}}</span>
                                </label>
                            </li>
                        </ul>
                    </div>
                    <!-- /.modal-body -->
                    <!-- .modal-footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-light" data-dismiss="modal">Đóng</button>
                        <button type="submit" class="btn btn-primary" ng-disabled="frmMeneInRoleModal.$invalid" ng-click="SaveMenuInRole(roleId)">Cập nhật</button>
                    </div>
                </form>
                <!-- /.modal-footer -->
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
    <!-- Edit claim modal -->
    <div id="EditClaimModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="EditClaimLabel" aria-hidden="true">
        <!-- .modal-dialog -->
        <div class="modal-dialog" role="document">
            <!-- .modal-content -->
            <div class="modal-content">
                <!-- .modal-header -->
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Cập nhật role & claims</h4>
                </div>
                <!-- /.modal-header -->
                <!-- .modal-body -->
                <!-- form .needs-validation -->
                <form id="frmEditClaimModal" name="frmEditClaimModal" class="needs-validation" novalidate="">
                    <!-- /form .needs-validation -->
                    <div class="modal-body">
                        <div class="form-group">
                            <label>
                                Tên phân quyền
                            </label>
                            <input type="hidden" class="form-control" ng-model="Claim.RoleId" required="">
                            <input type="text" class="form-control" ng-model="Claim.RoleName" required="">
                        </div>
                        <div ng-repeat="item in Claim.ClaimGroups">
                            <!-- .form-group -->
                            <hr />
                            <label class="d-block font-weight-bold">{{item.GroupName}}</label>
                            <div class="form-inline">
                                <div class="form-check mr-3" ng-repeat="itemOne in item.GroupClaimsCheckboxes">
                                    <label class="custom-control custom-control-primary custom-checkbox">
                                        <input class="custom-control-input" type="checkbox" id="{{itemOne.Value}}" ng-checked="itemOne.Selected" ng-model="itemOne.Selected">
                                        <span class="custom-control-indicator"></span>
                                        <span class="custom-control-label">{{itemOne.Text}}</span>
                                    </label>
                                </div>
                            </div>
                            <!-- /.form-group -->
                        </div>
                    </div>
                    <!-- /.modal-body -->
                    <!-- .modal-footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-light" data-dismiss="modal">Đóng</button>
                        <button type="submit" class="btn btn-primary" ng-disabled="frmEditClaimModal.$invalid" ng-click="SaveEditClaim(roleId)">Cập nhật</button>
                    </div>
                </form>
                <!-- /.modal-footer -->
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
</div>


@section scripts{
    <script>
        var IndexController = ($scope, $rootScope, $timeout, $filter, $compile, ApiHelper, CommonHelper, $q) => {
            //#region declare variable
            $scope.UpdateMode = false;
            $scope.Role = {};
            $scope.MenuInRole = {};
            $scope.Claim = {};
            //#endregion

            //#region Datatable
            $(function () {
                var peopleList = $('#tblData').DataTable({
                    "bProcessing": true,
                    "bSort": true,
                    "bServerSide": true,
                    "language": {
                        paginate: {
                            previous: '<i class="icon icon-angle-double-left"></i>',
                            next: '<i class="icon icon-angle-double-right"></i>'
                        }
                    },
                    "sAjaxSource": "/Roles/Data",
                    "aoColumnDefs": [
                        {
                            "sName": "Name",
                            "sTitle": "Tên quyền",
                            "bSearchable": true,
                            "bSortable": true,
                            "aTargets": [0]
                        },
                        {
                            'mRender': function (data, type, row, meta) {
                                return `
                                    <div class="text-center">
                                        <button class="btn btn-link link-muted btn-xs" type="button" ng-click="ReadMenuInRole('` + data + `');" data-toggle="tooltip" data-placement="top" title="Cập nhật quyền menu">
                                           <span class="icon icon-pencil-square-o icon-lg icon-fw"></span>
                                         </button>
                                        <button class="btn btn-link link-muted btn-xs" type="button" ng-click="ReadEditClaim('` + data + `');" data-toggle="tooltip" data-placement="top" title="Cập nhật">
                                           <span class="icon icon-pencil icon-lg icon-fw"></span>
                                         </button>
                                        <button class="btn btn-link link-muted btn-xs" type="button" ng-click="Delete('` + data + `');" data-toggle="tooltip" data-placement="top" title="Xóa">
                                           <span class="icon icon-trash-o icon-lg icon-fw"></span>
                                         </button>
                                    </div>`;
                            },
                            "sName": "Id",
                            "sTitle": "Thao tác",
                            "bSortable": false,
                            "aTargets": [1],
                            "sWidth": "150px",
                        }
                    ],
                    "drawCallback": function(settings) {
                        $('[data-toggle="tooltip"]').tooltip();
                    },
                    createdRow: function (row, data, dataIndex) {
                      $compile(angular.element(row).contents())($scope);
                    }
                });
            });
            //#endregion

            //#region ReadById
            var ReadById = (Id) => {
                let defer = $q.defer();
                $rootScope.MasterPage.IsLoading = true;
                let strApiEndPoint = CommonHelper.RoleUrl + Id;
                ApiHelper.GetMethod(strApiEndPoint)
                    .then(function (response) {
                        $rootScope.MasterPage.IsLoading = false;
                        $scope.Role = response.Data;
                        defer.resolve(response);
                    })
                    .catch(function (response) {
                        sys.Alert(false, response.Message);
                        defer.reject(response);
                        $rootScope.MasterPage.IsLoading = false;
                    });
                return defer.promise;
            };
            //#endregion

            //#region ReadMenuInRoleById
            var ReadMenuInRoleById = (Id) => {
                let defer = $q.defer();
                $rootScope.MasterPage.IsLoading = true;
                let strApiEndPoint = CommonHelper.RoleUrl + "menu-in-role/" + Id;
                ApiHelper.GetMethod(strApiEndPoint)
                    .then(function (response) {
                        $rootScope.MasterPage.IsLoading = false;
                        $scope.MenuInRole = response.Data;
                        defer.resolve(response);
                    })
                    .catch(function (response) {
                        sys.Alert(false, response.Message);
                        defer.reject(response);
                        $rootScope.MasterPage.IsLoading = false;
                    });
                return defer.promise;
            };
            //#endregion

            //#region ReadEditClaim
            var ReadEditClaimById = (Id) => {
                let defer = $q.defer();
                $rootScope.MasterPage.IsLoading = true;
                let strApiEndPoint = CommonHelper.RoleUrl + "edit-claims/" + Id;
                ApiHelper.GetMethod(strApiEndPoint)
                    .then(function (response) {
                        $rootScope.MasterPage.IsLoading = false;
                        $scope.Claim = response.Data;
                        defer.resolve(response);
                    })
                    .catch(function (response) {
                        sys.Alert(false, response.Message);
                        defer.reject(response);
                        $rootScope.MasterPage.IsLoading = false;
                    });
                return defer.promise;
            };
            //#endregion

            //#region Create
            $scope.Create = function () {
                $scope.UpdateMode = false;
                $scope.Role = {};
                $('#PnModal').appendTo("body").modal('show');
            };
            //#endregion

            //#region Update
            $scope.Update = function (Id) {
                $scope.UpdateMode = true;
                ReadById(Id);
                $('#PnModal').appendTo("body").modal('show');
            }
            //#endregion

            //#region MenuInRole
            $scope.ReadMenuInRole = function (Id) {
                ReadMenuInRoleById(Id);
                $('#MenuInRoleModal').appendTo("body").modal('show');
            }
            //#endregion

            //#region ReadEditClaim
            $scope.ReadEditClaim = function (Id) {
                ReadEditClaimById(Id);
                $('#EditClaimModal').appendTo("body").modal('show');
            }
            //#endregion

            //#region Delete
            $scope.Delete = function (Id) {
                swal({
                    title: "Xác nhận xóa?",
                    text: "Một khi đã xóa, bạn không thể khôi phục lại",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                    .then((willDelete) => {
                        if (willDelete) {
                            $rootScope.MasterPage.IsLoading = true;
                            let strApiEndPoint = CommonHelper.RoleUrl + "?id=" + Id;
                            ApiHelper.DeleteMethod(strApiEndPoint)
                                .then(function (response) {
                                    $rootScope.MasterPage.IsLoading = false;
                                    $('#tblData').DataTable().ajax.reload(null, false);
                                    sys.Alert(true, 'Xóa thành công!');

                                })
                                .catch(function (response) {
                                    sys.Alert(false, response.Message);
                                    $rootScope.MasterPage.IsLoading = false;
                                });
                        }
                    });
            };
            //#endregion

            //#region Save
            $scope.Save = function () {
                let defer = $q.defer();
                if (!$scope.UpdateMode) {
                    $rootScope.MasterPage.IsLoading = true;
                    let strApiEndPoint = CommonHelper.RoleUrl + "create";
                    ApiHelper.PostMethod(strApiEndPoint, $scope.Role)
                        .then(function (response) {
                            $rootScope.MasterPage.IsLoading = false;
                            $('#tblData').DataTable().ajax.reload(null, false);
                            sys.Alert(true, 'Thêm thành công');
                            defer.resolve(response);
                        })
                        .catch(function (response) {
                            $rootScope.MasterPage.IsLoading = false;
                            sys.Alert(false, response.Message);
                            defer.reject(response);
                        });
                    $('#PnModal').appendTo("body").modal('hide');
                }
                else {
                    $rootScope.MasterPage.IsLoading = true;
                    let strApiEndPoint = CommonHelper.RoleUrl + "update";
                    ApiHelper.PutMethod(strApiEndPoint, $scope.Role)
                        .then(function (response) {
                            $rootScope.MasterPage.IsLoading = false;
                            $('#tblData').DataTable().ajax.reload(null, false);
                            sys.Alert(true, 'Cập nhật thành công');
                            defer.resolve(response);
                        })
                        .catch(function (response) {
                            sys.Alert(false, response.Message);
                            $rootScope.MasterPage.IsLoading = false;
                            defer.reject(response);
                        });
                    $('#PnModal').appendTo("body").modal('hide');
                }
            };
            //#endregion

            //#region Save MenuInRole
            $scope.SaveMenuInRole = function () {
                let defer = $q.defer();
                $rootScope.MasterPage.IsLoading = true;
                let strApiEndPoint = CommonHelper.RoleUrl + "menu-in-role";
                let obj = new Object();
                obj.roleId = "";
                obj.menuIds = [];

                $scope.MenuInRole.forEach((x) => {
                    obj.roleId = x.RoleId;
                    if (x.Checked) obj.menuIds.push(x.Id);
                    if (x.Childrens.length > 0) {
                        x.Childrens.forEach((xx) => {
                            if (xx.Checked) obj.menuIds.push(xx.Id);
                        });
                    }
                });
                ApiHelper.PostMethod(strApiEndPoint, obj)
                    .then(function (response) {
                        $rootScope.MasterPage.IsLoading = false;
                        if (!response) {
                            sys.Alert(false, 'Có lỗi, vui lòng thử lại');
                            return;
                        }
                        $('#tblData').DataTable().ajax.reload(null, false);
                        sys.Alert(true, 'Cập nhật thành công');
                        defer.resolve(response);
                    })
                    .catch(function (response) {
                        sys.Alert(false, response.Message);
                        $rootScope.MasterPage.IsLoading = false;
                        defer.reject(response);
                    });
                $('#MenuInRoleModal').appendTo("body").modal('hide');
            };
            //#endregion

            //#region Save EditClaim
            $scope.SaveEditClaim = function () {
                let defer = $q.defer();
                $rootScope.MasterPage.IsLoading = true;
                let SelectedClaims = [];
                $scope.Claim.ClaimGroups.forEach((item) => {
                    item.GroupClaimsCheckboxes.forEach((x) => {
                        if (x.Selected) SelectedClaims.push(x.Value);
                    });
                });
                $scope.Claim.SelectedClaims = SelectedClaims;
                let strApiEndPoint = CommonHelper.RoleUrl + "edit-claims";
                ApiHelper.PostMethod(strApiEndPoint, $scope.Claim)
                    .then(function (response) {
                        $rootScope.MasterPage.IsLoading = false;
                        $('#tblData').DataTable().ajax.reload(null, false);
                        sys.Alert(true, 'Cập nhật thành công');
                        defer.resolve(response);
                    })
                    .catch(function (response) {
                        sys.Alert(false, response.Message);
                        $rootScope.MasterPage.IsLoading = false;
                        defer.reject(response);
                    });
                $('#EditClaimModal').appendTo("body").modal('hide');
            };
            //#endregion

        }
        IndexController.$inject = ["$scope", "$rootScope", "$timeout", "$filter", "$compile", "ApiHelper", "CommonHelper", "$q"];
        addController("IndexController", IndexController);
    </script>
}

