
@{
    ViewBag.Title = "Category";
}
<div class="col-xs-12" ng-controller="IndexController" ng-cloak>
    <div class="card">
        <div class="card-header">
            <div class="card-actions">
                <button type="button" class="card-action card-toggler" title="Collapse"></button>
            </div>
            <strong>Categories</strong>
        </div>
        <div class="card-body">
            <button type="button" class="btn btn-primary btn-sm pull-right" ng-click="Create()"><i class="icon icon-plus-circle"></i> Thêm mới</button>
            <div class="clearfix"></div>
            <table id="demo-datatables-responsive-2" class="table table-bordered table-striped table-nowrap dataTable" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th>First name</th>
                        <th>Last name</th>
                        <th>Position</th>
                        <th>Office</th>
                        <th>Age</th>
                        <th>Start date</th>
                        <th>Salary</th>
                        <th>Extn.</th>
                        <th>E-mail</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Tiger</td>
                        <td>Nixon</td>
                        <td>System Architect</td>
                        <td>Edinburgh</td>
                        <td>61</td>
                        <td>2011/04/25</td>
                        <td>$320,800</td>
                        <td>5421</td>
                        <td>t.nixon@datatables.net</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

</div>


<div class="col-md-12" ng-controller="IndexController" ng-cloak>
    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">@ViewBag.Title</h3>
            <div class="box-tools pull-right">
            </div>
        </div>
        <div class="box-body">
            <table id="myTable" class="table table-hover table-responsive"></table>
            <!-- Large modal -->
            <div class="modal fade" id="PnModal">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header bg-primary">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <h4 class="modal-title">{{ UpdateMode ? "Cập nhật" : "Thêm mới" }}</h4>
                        </div>
                        <form id="frmModal" name="frmModal" class="needs-validation" novalidate="">
                            <div class="modal-body">
                                <div class="form-group">
                                    <label>
                                        Đối tác
                                    </label>
                                    <select class="form-control" ng-options="c.Id as c.PartnerName for c in Partners" ng-model="Category.PartnerID" required>
                                        <option value="" selected="selected">---Select partner---</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>
                                        Tên Category
                                    </label>
                                    <input type="text" class="form-control" ng-model="Category.CategoryName" required>
                                </div>
                                <div class="form-group">
                                    <label>
                                        Code
                                    </label>
                                    <input type="text" class="form-control" ng-model="Category.CategoryCode" required>
                                </div>
                                <div class="form-group">
                                    <label>
                                        PercentCommission
                                    </label>
                                    <input type="number" class="form-control" ng-model="Category.PercentCommission" required>
                                </div>
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox" id="IsActive" ng-model="Category.IsActive"> Kích hoạt
                                    </label>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-light" data-dismiss="modal">Đóng</button>
                                <button type="submit" class="btn btn-primary" ng-disabled="frmModal.$invalid" ng-click="Save()">{{ UpdateMode ? "Cập nhật" : "Thêm" }}</button>
                            </div>
                        </form>
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>
            <!-- /.modal -->
        </div>
    </div>
</div>

@section scripts{
    <script>
        var IndexController = ($scope, $rootScope, $timeout, $filter, $compile, ApiHelper, CommonHelper, UtilFactory, DataFactory, $q) => {

            //#region declare variable
            $scope.UpdateMode = false;
            $scope.Category = {};
            $scope.Partners = [];
            //#endregion

            //#region Datatable
            $(function () {
                $scope.GetPartner().then(function (response) {
                    var peopleList = $('#myTable').DataTable({
                        "bProcessing": true,
                        "bSort": true,
                        "bServerSide": true,
                        "language": {
                            paginate: {
                                previous: '<i class="fa fa-lg fa-angle-left"></i>',
                                next: '<i class="fa fa-lg fa-angle-right"></i>'
                            }
                        },
                        "sAjaxSource": "/Categories/Data",
                        "aoColumnDefs": [
                            {
                                "sName": "PartnerID",
                                "sTitle": "Đối tác",
                                "className": "text-center",
                                "bSearchable": true,
                                "bSortable": true,
                                "aTargets": [0],
                                'mRender': function (data, type, row, meta) {
                                    return $scope.Partners.filter(x=> x.Id == data).map(c=> c.PartnerName);
                                }
                            },
                            {
                                "sName": "CategoryName",
                                "sTitle": "Tên ngành hàng",
                                "className": "text-center",
                                "bSearchable": true,
                                "bSortable": true,
                                "aTargets": [1]
                            },
                            {
                                "sName": "CategoryCode",
                                "sTitle": "Mã ngành hàng",
                                "className": "text-center",
                                "bSearchable": true,
                                "bSortable": true,
                                "aTargets": [2]
                            },
                            {
                                "sName": "PercentCommission",
                                "sTitle": "Hoa hồng (%)",
                                "className": "text-center",
                                "bSearchable": true,
                                "bSortable": true,
                                "aTargets": [3]
                            },
                            {
                                "sName": "IsActive",
                                "sTitle": "Hoạt động",
                                "className": "text-center",
                                "bSearchable": true,
                                "bSortable": true,
                                "aTargets": [4],
                                'mRender': function (data, type, row, meta) {
                                    return data == 'True' ? '<i class="fa fa-circle text-green"></i>' : '<i class="fa fa-circle text-red"></i>';
                                }
                            },
                            {
                                'mRender': function (data, type, row, meta) {
                                    return `
                                        <button class="btn btn-primary btn-sm" ng-click="Update('` + data + `');" data-toggle="tooltip" data-placement="top" title="Cập nhật"><i class="fa fa-edit"></i></button>
                                        <button class="btn btn-danger btn-sm" ng-click="Delete('` + data + `');" data-toggle="tooltip" data-placement="top" title="Xóa"><i class="fa fa-times"></i></button>`;
                                },
                                "sName": "Id",
                                "sTitle": "Thao tác",
                                "className": "text-center",
                                "bSortable": false,
                                "aTargets": [5]
                            }
                        ],
                        createdRow: function (row, data, dataIndex) {
                            $compile(angular.element(row).contents())($scope);
                        }
                    })
                })
                .catch(function (response) {
                });
            });
            //#endregion

            //#region ReadById
            var ReadById = (Id) => {
                let defer = $q.defer();
                $rootScope.MasterPage.IsLoading = true;
                let strApiEndPoint = CommonHelper.CategoryUrl + Id;

                ApiHelper.GetMethod(strApiEndPoint).then(function (response) {
                    $rootScope.MasterPage.IsLoading = false;
                    $scope.Category = response.Data;
                    defer.resolve(response);
                }).catch(function (response) {
                    sys.Alert(false, response.Message);
                    defer.reject(response);
                    $rootScope.MasterPage.IsLoading = false;
                });

                return defer.promise;
            };
            //#endregion

            //#region Create
            $scope.Create = function () {
                $scope.UpdateMode = false;
                $scope.Category = {};
                $('#PnModal').modal('show');
            };
            //#endregion

            //#region Update
            $scope.Update = function (Id) {
                $scope.UpdateMode = true;
                ReadById(Id);
                $('#PnModal').modal('show');
            }
            //#endregion

            //#region Delete
            $scope.Delete = function (Id) {
                swal({
                    title: "Xác nhận xóa?",
                    text: "Một khi đã xóa, bạn không thể khôi phục lại",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                }).then((willDelete) => {
                    if (willDelete) {
                        let defer = $q.defer();
                        $rootScope.MasterPage.IsLoading = true;
                        let strApiEndPoint = CommonHelper.CategoryUrl + Id;

                        ApiHelper.DeleteMethod(strApiEndPoint).then(function (response) {
                            $rootScope.MasterPage.IsLoading = false;
                            $('#myTable').DataTable().ajax.reload(null, false);
                            sys.Alert(true, 'Xóa thành công!');
                            defer.resolve(response);
                        }).catch(function (response) {
                            sys.Alert(false, response.Message);
                            defer.reject(response);
                            $rootScope.MasterPage.IsLoading = false;
                        });
                    }
                });
            };
            //#endregion

            //#region Save
            $scope.Save = function () {
                let defer = $q.defer();
                if (!$scope.UpdateMode) {
                    $rootScope.MasterPage.IsLoading = true;
                    let strApiEndPoint = CommonHelper.CategoryUrl + "create";

                    ApiHelper.PostMethod(strApiEndPoint, $scope.Category).then(function (response) {
                        $rootScope.MasterPage.IsLoading = false;
                        $('#myTable').DataTable().ajax.reload(null, false);
                        sys.Alert(true, 'Thêm thành công');
                        defer.resolve(response);
                    }).catch(function (response) {
                        sys.Alert(false, response.Message);
                        defer.reject(response);
                        $rootScope.MasterPage.IsLoading = false;
                        });

                    $('#PnModal').modal('hide');
                }
                else {
                    $rootScope.MasterPage.IsLoading = true;
                    let strApiEndPoint = CommonHelper.CategoryUrl + "update";

                    ApiHelper.PutMethod(strApiEndPoint, $scope.Category).then(function (response) {
                        $rootScope.MasterPage.IsLoading = false;
                        $('#myTable').DataTable().ajax.reload(null, false);
                        sys.Alert(true, 'Cập nhật thành công');
                        defer.resolve(response);
                    }).catch(function (response) {
                        sys.Alert(false, response.Message);
                        defer.reject(response);
                        $rootScope.MasterPage.IsLoading = false;
                    });

                    $('#PnModal').modal('hide');
                }
            };
            //#endregion

        $scope.GetPartner = function() {
            let defer = $q.defer();
            let strApiEndPoint = CommonHelper.PartnerUrl;
            ApiHelper.GetMethod(strApiEndPoint)
                .then(function (response) {
                    $scope.Partners = response.Data;
                    defer.resolve(response);
                })
                .catch(function (response) {
                    defer.reject(response);
                });
            return defer.promise;
        }
        }

        IndexController.$inject = ["$scope", "$rootScope", "$timeout", "$filter", "$compile", "ApiHelper", "CommonHelper", "UtilFactory", "DataFactory", "$q"];
        addController("IndexController", IndexController);
    </script>
}
