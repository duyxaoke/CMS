
@{
    ViewData["Title"] = "Quản lý danh mục";
}

<div class="col-xs-12" ng-controller="IndexController" ng-cloak>
    <div class="card">
        <div class="card-header">
            <div class="card-actions">
                <button type="button" class="card-action card-toggler" title="Collapse"></button>
            </div>
            <strong>Quản lý danh mục</strong>
        </div>
        <div class="card-body">
            <button type="button" class="btn btn-primary btn-sm pull-right" style="margin-bottom:15px" ng-click="Create()"><i class="icon icon-plus-circle"></i> Thêm mới</button>
            <div class="clearfix"></div>
            <table id="tblData" class="table table-bordered table-striped table-hover table-nowrap dataTable no-footer dtr-inline" cellspacing="0" width="100%"></table>
        </div>
    </div>
    <!-- Large modal -->
    <div class="modal fade" id="PnModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">{{ UpdateMode ? "Cập nhật" : "Thêm mới" }}</h4>
                </div>
                <!-- form .needs-validation -->
                <form id="frmModal" name="frmModal" class="needs-validation" novalidate="">
                    <!-- /form .needs-validation -->
                    <div class="modal-body">
                        <div class="form-group">
                            <label>
                                Danh mục cha
                            </label>
                            <select class="select2 form-control" ng-options="c.Id as c.CategoryName for c in Data" ng-model="Cate.ParentID">
                                <option value="" selected="selected">Chọn danh mục cha</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>
                                Loại hiển thị <span class="icon icon-question-circle" data-toggle="tooltip" title="Định nghĩa kiểu hiển thị bài viết thuộc danh mục này"></span>
                            </label>
                            <select class="select2 form-control" ng-model="Cate.ModuleID">
                                <option value="" selected="selected">Hiển thị dạng bài viết</option>
                                <option value="1">Hiển thị dạng danh sách</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>
                                Tên danh mục
                            </label>
                            <input type="text" class="form-control" ng-model="Cate.CategoryName" required="">
                        </div>
                        <div class="form-group">
                            <label>
                                Mô tả
                            </label>
                            <input type="text" class="form-control" ng-model="Cate.Description" />
                        </div>
                        <div class="form-group">
                            <label class="custom-control custom-control-primary custom-checkbox">
                                <input class="custom-control-input" type="checkbox" name="mode" ng-checked="true" ng-model="Cate.IsActive">
                                <span class="custom-control-indicator"></span>
                                <span class="custom-control-label">Hoạt động</span>
                            </label>
                        </div>
                    </div>
                    <!-- /.modal-body -->
                    <!-- .modal-footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-light" data-dismiss="modal">Đóng</button>
                        <button type="submit" class="btn btn-primary" ng-disabled="frmModal.$invalid" ng-click="Save()">{{ UpdateMode ? "Cập nhật" : "Thêm" }}</button>
                    </div>
                </form>
                <!-- /.modal-footer -->
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->

</div>

@section scripts{
    <script>
        var IndexController = ($scope, $rootScope, $timeout, $filter, $compile, ApiHelper, CommonHelper, UtilFactory, DataFactory, $q) => {

            //#region declare variable
            $scope.UpdateMode = false;
            $scope.Cate = { IsActive: true };
            $scope.Data = [];

            //#endregion

            //#region Datatable
            $(function () {
                var peopleList = $('#tblData').DataTable({
                    "bProcessing": true,
                    "bSort": true,
                    "bServerSide": true,
                    "language": {
                        paginate: {
                            previous: '<i class="icon icon-angle-double-left"></i>',
                            next: '<i class="icon icon-angle-double-right"></i>'
                        }
                    },
                    "sAjaxSource": "/Categories/Data",
                    "aoColumnDefs": [
                        {
                            "sName": "CategoryName",
                            "sTitle": "Tên danh mục",
                            "bSearchable": true,
                            "bSortable": true,
                            "aTargets": [0]
                        },
                        {
                            'mRender': function (data, type, row, meta) {
                                return `
                                    <div class="text-center">
                                        <button class="btn btn-link link-muted btn-xs" type="button" ng-click="Update('` + data + `');" data-toggle="tooltip" data-placement="top" title="Cập nhật">
                                           <span class="icon icon-pencil icon-lg icon-fw"></span>
                                         </button>
                                        <button class="btn btn-link link-muted btn-xs" type="button" ng-click="Delete('` + data + `');" data-toggle="tooltip" data-placement="top" title="Xóa">
                                           <span class="icon icon-trash-o icon-lg icon-fw"></span>
                                         </button>
                                    </div>`;
                            },
                            "sName": "Id",
                            "bSortable": false,
                            "aTargets": [1],
                            "sWidth": "80px"
                        }
                    ],
                    "drawCallback": function (settings) {
                        $('[data-toggle="tooltip"]').tooltip();
                    },
                    createdRow: function (row, data, dataIndex) {
                        $compile(angular.element(row).contents())($scope);
                    }
                });
            });
            //#endregion

            //#region ReadById
            var ReadById = (Id) => {
                let defer = $q.defer();
                $rootScope.MasterPage.IsLoading = true;
                let strApiEndPoint = CommonHelper.CategoryUrl + Id;
                ApiHelper.GetMethod(strApiEndPoint)
                    .then(function (response) {
                        $rootScope.MasterPage.IsLoading = false;
                        $scope.Cate = response.Data;
                        defer.resolve(response);
                    })
                    .catch(function (response) {
                        sys.Alert(false, response.Message);
                        defer.reject(response);
                        $rootScope.MasterPage.IsLoading = false;
                    });
                return defer.promise;
            };
            //#endregion

            //#region Create
            $scope.Create = function () {
                $scope.UpdateMode = false;
                $scope.Cate = {};
                $('#PnModal').appendTo("body").modal('show');
            };
            //#endregion

            //#region Update
            $scope.Update = function (Id) {
                $scope.UpdateMode = true;
                ReadById(Id);
                $('#PnModal').appendTo("body").modal('show');
            }
            //#endregion

            //#region Delete
            $scope.Delete = function (Id) {
                swal({
                    title: "Xác nhận xóa?",
                    text: "Một khi đã xóa, bạn không thể khôi phục lại",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                    .then((willDelete) => {
                        if (willDelete) {
                            $rootScope.MasterPage.IsLoading = true;
                            let strApiEndPoint = CommonHelper.CategoryUrl + Id;
                            ApiHelper.DeleteMethod(strApiEndPoint)
                                .then(function (response) {
                                    $rootScope.MasterPage.IsLoading = false;
                                    $('#tblData').DataTable().ajax.reload(null, false);
                                    sys.Alert(true, 'Xóa thành công!');
                                })
                                .catch(function (response) {
                                    sys.Alert(false, response.Message);
                                    $rootScope.MasterPage.IsLoading = false;
                                });
                        }
                    });
            };
            //#endregion

            //#region Save
            $scope.Save = function () {
                if (!$scope.UpdateMode) {
                    $rootScope.MasterPage.IsLoading = true;
                    let strApiEndPoint = CommonHelper.CategoryUrl;
                    ApiHelper.PostMethod(strApiEndPoint, $scope.Cate)
                        .then(function (response) {
                            $rootScope.MasterPage.IsLoading = false;
                            $('#tblData').DataTable().ajax.reload(null, false);
                            sys.Alert(true, 'Thêm thành công');
                        })
                        .catch(function (response) {
                            sys.Alert(false, response.Message);
                            defer.reject(response);
                            $rootScope.MasterPage.IsLoading = false;
                        });
                    $('#PnModal').appendTo("body").modal('hide');
                }
                else {
                    $rootScope.MasterPage.IsLoading = true;
                    let strApiEndPoint = CommonHelper.CategoryUrl;
                    ApiHelper.PutMethod(strApiEndPoint, $scope.Cate)
                        .then(function (response) {
                            $rootScope.MasterPage.IsLoading = false;
                            $('#tblData').DataTable().ajax.reload(null, false);
                            sys.Alert(true, 'Cập nhật thành công');
                        })
                        .catch(function (response) {
                            sys.Alert(false, response.Message);
                            defer.reject(response);
                            $rootScope.MasterPage.IsLoading = false;
                        });
                    $('#PnModal').appendTo("body").modal('hide');
                }
            };
            //#endregion

            //#region GetAll
            $rootScope.MasterPage.IsLoading = true;
            UtilFactory.WaitingLoadDirective(
                [
                ]).then(() => {
                    $q.all({
                        Categories: DataFactory.Categories_Get(),
                    }).then((MultipleRes) => {
                        $scope.Data = MultipleRes.Categories.Data;
                    });
                }).catch((response) => {
                    throw response;
                });
            $rootScope.MasterPage.IsLoading = false;
            //#endregion
        }
        IndexController.$inject = ["$scope", "$rootScope", "$timeout", "$filter", "$compile", "ApiHelper", "CommonHelper", "UtilFactory", "DataFactory", "$q"];
        addController("IndexController", IndexController);
    </script>
}