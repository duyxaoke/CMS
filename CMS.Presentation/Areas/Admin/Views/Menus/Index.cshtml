
@{
    ViewData["Title"] = "Quản lý menu";
}

<div class="col-xs-12" ng-controller="IndexController" ng-cloak>
    <div class="card">
        <div class="card-header">
            <div class="card-actions">
                <button type="button" class="card-action card-toggler" title="Collapse"></button>
            </div>
            <strong>Menu</strong>
        </div>
        <div class="card-body">
            <button type="button" class="btn btn-primary btn-sm pull-right" style="margin-bottom:15px" ng-click="Create()"><i class="icon icon-plus-circle"></i> Thêm mới</button>
            <div class="clearfix"></div>
            <table id="tblData" class="table table-bordered table-striped table-nowrap dataTable no-footer dtr-inline" cellspacing="0" width="100%"></table>
            <!-- Large modal -->
            <div class="modal fade" id="PnModal">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header bg-primary">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <h4 class="modal-title">{{ UpdateMode ? "Cập nhật" : "Thêm mới" }}</h4>
                        </div>
                        <!-- form .needs-validation -->
                        <form id="frmModal" name="frmModal" class="needs-validation" novalidate="">
                            <!-- /form .needs-validation -->
                            <div class="modal-body">
                                <div class="form-group">
                                    <label>
                                        Menu cha
                                    </label>
                                    <select class="form-control" ng-options="c.Id as c.Name for c in Data" ng-model="Menu.ParentId">
                                        <option value="" selected="selected">---Select parent---</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>
                                        Tên menu
                                    </label>
                                    <input type="text" class="form-control" ng-model="Menu.Name" required="">
                                </div>
                                <div class="form-group">
                                    <label>
                                        Url
                                    </label>
                                    <input type="text" class="form-control" ng-model="Menu.Url" required="">
                                </div>
                                <div class="form-group">
                                    <label>
                                        Icon
                                    </label>
                                    <input type="text" class="form-control" ng-model="Menu.Icon">
                                </div>
                                <div class="form-group">
                                    <label>
                                        Sắp xếp
                                    </label>
                                    <input type="text" class="form-control" ng-model="Menu.Order">
                                </div>
                                <div class="form-check">
                                    <label class="form-check-label">
                                        <input type="checkbox" class="form-check-input" id="SystemEnable" ng-model="Menu.IsActive">
                                        Hoạt động
                                    </label>
                                </div>
                            </div>
                            <!-- /.modal-body -->
                            <!-- .modal-footer -->
                            <div class="modal-footer">
                                <button type="button" class="btn btn-light" data-dismiss="modal">Đóng</button>
                                <button type="submit" class="btn btn-primary" ng-disabled="frmModal.$invalid" ng-click="Save()">{{ UpdateMode ? "Cập nhật" : "Thêm" }}</button>
                            </div>
                        </form>
                        <!-- /.modal-footer -->
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>
            <!-- /.modal -->

        </div>
    </div>
</div>
<button class="btn btn-outline-primary" data-toggle="modal" data-target="#infoModalColoredHeader" type="button">Launch demo modal</button>

<div id="infoModalColoredHeader" tabindex="-1" role="dialog" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span>
                    <span class="sr-only">Close</span>
                </button>
                <h4 class="modal-title">Colored Header Modal</h4>
            </div>
            <div class="modal-body">
                <p>Phasellus sapien felis, vulputate a nibh eu, tempor dictum turpis. Pellentesque non ex condimentum, dictum mauris non, ullamcorper nisi. Nunc sodales vel libero ac gravida. Maecenas malesuada viverra odio at molestie.</p>
                <p>Donec ultrices vel nibh a iaculis. Morbi dapibus sollicitudin libero facilisis dapibus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" data-dismiss="modal" type="button">Continue</button>
                <button class="btn btn-default" data-dismiss="modal" type="button">Cancel</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        var IndexController = ($scope, $rootScope, $timeout, $filter, $compile, ApiHelper, CommonHelper, UtilFactory, DataFactory, $q) => {

            //#region declare variable
            $scope.UpdateMode = false;
            $scope.Menu = {};
            $scope.Data = [];
            //#endregion

            //#region Datatable
            $(function () {
                var peopleList = $('#tblData').DataTable({
                    "bProcessing": true,
                    "bSort": true,
                    "bServerSide": true,
                    "language": {
                        paginate: {
                            previous: '<i class="icon icon-angle-double-left"></i>',
                            next: '<i class="icon icon-angle-double-right"></i>'
                        }
                    },
                    "sAjaxSource": "/Menus/Data",
                    "aoColumnDefs": [
                        {
                            "sName": "Name",
                            "sTitle": "Tên menu",
                            "bSearchable": true,
                            "bSortable": true,
                            "aTargets": [0]
                        },
                        {
                            "sName": "Url",
                            "sTitle": "Url",
                            "bSearchable": true,
                            "bSortable": true,
                            "aTargets": [1]
                        },
                        {
                            "sName": "Order",
                            "sTitle": "Sắp xếp",
                            "bSearchable": true,
                            "bSortable": true,
                            "aTargets": [2]
                        },
                        {
                            'mRender': function (data, type, row, meta) {
                                return `
                                    <div class="text-center">
                                        <button class="btn btn-link link-muted btn-xs" type="button" ng-click="Update('` + data + `');" data-toggle="tooltip" data-placement="top" title="Cập nhật">
                                           <span class="icon icon-pencil icon-lg icon-fw"></span>
                                         </button>
                                        <button class="btn btn-link link-muted btn-xs" type="button" ng-click="Delete('` + data + `');" data-toggle="tooltip" data-placement="top" title="Xóa">
                                           <span class="icon icon-trash-o icon-lg icon-fw"></span>
                                         </button>
                                    </div>`;
                            },
                            "sName": "Id",
                            "bSortable": false,
                            "aTargets": [3],
                            "sWidth": "80px"
                        }
                    ],
                    createdRow: function (row, data, dataIndex) {
                        $compile(angular.element(row).contents())($scope);
                    }
                });
            });
            //#endregion

            //#region ReadById
            var ReadById = (Id) => {
                let defer = $q.defer();
                $rootScope.MasterPage.IsLoading = true;
                let strApiEndPoint = CommonHelper.MenuUrl + Id;
                ApiHelper.GetMethod(strApiEndPoint)
                    .then(function (response) {
                        $rootScope.MasterPage.IsLoading = false;
                        $scope.Menu = response.Data;
                        defer.resolve(response);
                    })
                    .catch(function (response) {
                        sys.Alert(false, response.Message);
                        defer.reject(response);
                        $rootScope.MasterPage.IsLoading = false;
                    });
                return defer.promise;
            };
            //#endregion

            //#region Create
            $scope.Create = function () {
                $scope.UpdateMode = false;
                $scope.Menu = {};
                $('#PnModal').modal('show');
            };
            //#endregion

            //#region Update
            $scope.Update = function (Id) {
                $scope.UpdateMode = true;
                ReadById(Id);
                $('#PnModal').modal('show');
            }
            //#endregion

            //#region Delete
            $scope.Delete = function (Id) {
                swal({
                    title: "Xác nhận xóa?",
                    text: "Một khi đã xóa, bạn không thể khôi phục lại",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                    .then((willDelete) => {
                        if (willDelete) {
                            $rootScope.MasterPage.IsLoading = true;
                            let strApiEndPoint = CommonHelper.MenuUrl + Id;
                            ApiHelper.DeleteMethod(strApiEndPoint)
                                .then(function (response) {
                                    $rootScope.MasterPage.IsLoading = false;
                                    $('#myTable').DataTable().ajax.reload(null, false);
                                    sys.Alert(true, 'Xóa thành công!');
                                })
                                .catch(function (response) {
                                    sys.Alert(false, response.Message);
                                    $rootScope.MasterPage.IsLoading = false;
                                });
                        }
                    });
            };
            //#endregion

            //#region Save
            $scope.Save = function () {
                if (!$scope.UpdateMode) {
                    $rootScope.MasterPage.IsLoading = true;
                    let strApiEndPoint = CommonHelper.MenuUrl;
                    ApiHelper.PostMethod(strApiEndPoint, $scope.Menu)
                        .then(function (response) {
                            $rootScope.MasterPage.IsLoading = false;
                            $('#myTable').DataTable().ajax.reload(null, false);
                            sys.Alert(true, 'Thêm thành công');
                        })
                        .catch(function (response) {
                            sys.Alert(false, response.Message);
                            defer.reject(response);
                            $rootScope.MasterPage.IsLoading = false;
                        });
                    $('#PnModal').modal('hide');
                }
                else {
                    $rootScope.MasterPage.IsLoading = true;
                    let strApiEndPoint = CommonHelper.MenuUrl;
                    ApiHelper.PutMethod(strApiEndPoint, $scope.Menu)
                        .then(function (response) {
                            $rootScope.MasterPage.IsLoading = false;
                            $('#myTable').DataTable().ajax.reload(null, false);
                            sys.Alert(true, 'Cập nhật thành công');
                        })
                        .catch(function (response) {
                            sys.Alert(false, response.Message);
                            defer.reject(response);
                            $rootScope.MasterPage.IsLoading = false;
                        });
                    $('#PnModal').modal('hide');
                }
            };
            //#endregion

            //#region GetAll
            $rootScope.MasterPage.IsLoading = true;
            UtilFactory.WaitingLoadDirective(
                [
                ]).then(() => {
                    $q.all({
                        Menus: DataFactory.Menus_Get(),
                    }).then((MultipleRes) => {
                        $scope.Data = MultipleRes.Menus.Data;
                    });
                }).catch((response) => {
                    throw response;
                });
            $rootScope.MasterPage.IsLoading = false;
            //#endregion
        }
        IndexController.$inject = ["$scope", "$rootScope", "$timeout", "$filter", "$compile", "ApiHelper", "CommonHelper", "UtilFactory", "DataFactory", "$q"];
        addController("IndexController", IndexController);
    </script>
}