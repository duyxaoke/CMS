@{
    ViewData["Title"] = "Danh sách Users";
}

<div class="col-xs-12" ng-controller="IndexController" ng-cloak>
    <div class="card">
        <div class="card-header">
            <div class="card-actions">
                <button type="button" class="card-action card-toggler" title="Collapse"></button>
            </div>
            <strong>@CMS.StaticResources.Resources.TEXT_USER</strong>
        </div>
        <div class="card-body">
            <button type="button" class="btn btn-primary btn-sm pull-right" style="margin-bottom:15px" ng-click="Create()"><i class="icon icon-plus-circle"></i> @CMS.StaticResources.Resources.TEXT_CREATE</button>
            <div class="clearfix"></div>
            <table id="tblData" class="table table-bordered table-striped table-hover table-nowrap dataTable no-footer dtr-inline" cellspacing="0" width="100%"></table>
        </div>
    </div>
    <!-- Large modal -->
    <div class="modal fade" id="PnModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">{{ UpdateMode ? "@CMS.StaticResources.Resources.TEXT_UPDATE" : "@CMS.StaticResources.Resources.TEXT_CREATE" }}</h4>
                </div>
                <form id="frmModal" name="frmModal" class="needs-validation" novalidate="">
                    <!-- /form .needs-validation -->
                    <div class="modal-body">
                        <div class="form-group">
                            <label>
                                @CMS.StaticResources.Resources.TEXT_FULLNAME
                            </label>
                            <input type="text" class="form-control" ng-model="User.Name" required="">
                        </div>
                        <div class="form-group">
                            <label>
                                E-mail
                            </label>
                            <input type="email" class="form-control" ng-model="User.Email" required="">
                        </div>
                        <div class="form-group">
                            <label>
                                @CMS.StaticResources.Resources.TEXT_USERNAME
                            </label>
                            <input type="text" class="form-control" ng-model="User.UserName" required="">
                        </div>
                        <div class="form-group">
                            <label>
                                @CMS.StaticResources.Resources.TEXT_PASSWORD
                            </label>
                            <input type="password" class="form-control" ng-model="User.Password">
                        </div>
                    </div>
                    <!-- /.modal-body -->
                    <!-- .modal-footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-light" data-dismiss="modal">@CMS.StaticResources.Resources.TEXT_CLOSE</button>
                        <button type="submit" class="btn btn-primary" ng-disabled="frmModal.$invalid" ng-click="Save()">{{ UpdateMode ? "@CMS.StaticResources.Resources.TEXT_UPDATE" : "@CMS.StaticResources.Resources.TEXT_CREATE" }}</button>
                    </div>
                </form>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
    <!-- Menu in role modal -->
    <div id="UserInRoleModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="UserInRoleLabel" aria-hidden="true">
        <!-- .modal-dialog -->
        <div class="modal-dialog" role="document">
            <!-- .modal-content -->
            <div class="modal-content">
                <!-- .modal-header -->
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">@CMS.StaticResources.Resources.TEXT_UPDATE_ROLE</h4>
                </div>
                <!-- /.modal-header -->
                <!-- .modal-body -->
                <!-- form .needs-validation -->
                <form id="frmUserInRoleModal" name="frmUserInRoleModal" class="needs-validation" novalidate="">
                    <!-- /form .needs-validation -->
                    <div class="modal-body">
                        <div class="form-group">
                            <label>
                                @CMS.StaticResources.Resources.TEXT_USERNAME
                            </label>
                            <input type="hidden" class="form-control" ng-model="UserInRole.UserId">
                            <input type="text" class="form-control" ng-model="UserInRole.Username" readonly required="">
                        </div>
                        <div class="form-inline">
                            <label class="custom-control custom-control-primary custom-checkbox" ng-repeat="item in UserInRole.UserRoles">
                                <input class="custom-control-input" type="checkbox" id="{{item.Value}}" ng-checked="item.Selected" ng-model="item.Selected">
                                <span class="custom-control-indicator"></span>
                                <span class="custom-control-label">{{item.Text}}</span>
                            </label>
                        </div>
                    </div>
                    <!-- /.modal-body -->
                    <!-- .modal-footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-light" data-dismiss="modal">@CMS.StaticResources.Resources.TEXT_CLOSE</button>
                        <button type="submit" class="btn btn-primary" ng-disabled="frmMeneInRoleModal.$invalid" ng-click="SaveUserInRole(roleId)">@CMS.StaticResources.Resources.TEXT_UPDATE</button>
                    </div>
                </form>
                <!-- /.modal-footer -->
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
</div>


@section scripts{
    <script>
        var IndexController = ($scope, $rootScope, $timeout, $filter, $compile, ApiHelper, CommonHelper, $q) => {
            //#region declare variable
            $scope.UpdateMode = false;
            $scope.User = {};
            $scope.UserInRole = {};
            $scope.Claim = {};
            //#endregion

            //#region Datatable
            $(function () {
                var peopleList = $('#tblData').DataTable({
                    "bProcessing": true,
                    "bSort": true,
                    "bServerSide": true,
                    "language": {
                        paginate: {
                            previous: '<i class="icon icon-angle-double-left"></i>',
                            next: '<i class="icon icon-angle-double-right"></i>'
                        }
                    },
                    "sAjaxSource": "/Users/Data",
                    "aoColumnDefs": [
                        {
                            "sName": "UserName",
                            "sTitle": "@CMS.StaticResources.Resources.TEXT_USERNAME",
                            "bSearchable": true,
                            "bSortable": true,
                            "aTargets": [0]
                        },
                        {
                            "sName": "Email",
                            "sTitle": "E-mail",
                            "bSearchable": true,
                            "bSortable": true,
                            "aTargets": [1]
                        },
                        {
                            "sName": "Name",
                            "sTitle": "@CMS.StaticResources.Resources.TEXT_FULLNAME",
                            "bSearchable": true,
                            "bSortable": true,
                            "aTargets": [2]
                        },
                        {
                            "sName": "LockoutEnabled",
                            "sTitle": "@CMS.StaticResources.Resources.TEXT_ACTIVE",
                            "className": "text-center",
                            "bSearchable": true,
                            "bSortable": true,
                            "aTargets": [3],
                            'mRender': function (data, type, row, meta) {
                                return data == 'False' ? '<i class="icon icon-check text-success"></i>' : '<i class="icon icon-close text-danger"></i>';
                            },
                            "sWidth": "70px"
                        },
                        {
                            'mRender': function (data, type, row, meta) {
                                return `
                                        <div class="text-center">
                                        <button class="btn btn-link link-muted btn-xs" type="button" ng-click="ChangeBlockout('` + data + `');" data-toggle="tooltip" data-placement="top" title="Block / Unblock">
                                           <span class="icon icon-lock icon-lg icon-fw"></span>
                                         </button>
                                        <button class="btn btn-link link-muted btn-xs" type="button" ng-click="Update('` + data + `');" data-toggle="tooltip" data-placement="top" title="@CMS.StaticResources.Resources.TEXT_UPDATE_USER">
                                           <span class="icon icon-pencil icon-lg icon-fw"></span>
                                         </button>
                                        <button class="btn btn-link link-muted btn-xs" type="button" ng-click="ReadUserInRole('` + data + `');" data-toggle="tooltip" data-placement="top" title="@CMS.StaticResources.Resources.TEXT_UPDATE_ROLE">
                                           <span class="icon icon-pencil-square-o icon-lg icon-fw"></span>
                                         </button>
                                        <button class="btn btn-link link-muted btn-xs" type="button" ng-click="Delete('` + data + `');" data-toggle="tooltip" data-placement="top" title="@CMS.StaticResources.Resources.TEXT_DELETE">
                                           <span class="icon icon-trash-o icon-lg icon-fw"></span>
                                         </button>
                                    </div>`;
                            },
                            "sName": "Id",
                            "sTitle": "@CMS.StaticResources.Resources.TEXT_ACTION",
                            "className": "text-center",
                            "bSortable": false,
                            "aTargets": [4],
                            "sWidth": "180px",
                        }
                    ],
                    "drawCallback": function (settings) {
                        $('[data-toggle="tooltip"]').tooltip();
                    },
                    createdRow: function (row, data, dataIndex) {
                        $compile(angular.element(row).contents())($scope);
                    }
                });
            });
            //#endregion

            //#region ReadById
            var ReadById = (Id) => {
                let defer = $q.defer();
                $rootScope.MasterPage.IsLoading = true;
                let strApiEndPoint = CommonHelper.UserUrl + Id;
                ApiHelper.GetMethod(strApiEndPoint)
                    .then(function (response) {
                        $rootScope.MasterPage.IsLoading = false;
                        $scope.User = response.Data;
                        defer.resolve(response);
                    })
                    .catch(function (response) {
                        sys.Alert(false, response.Message);
                        defer.reject(response);
                        $rootScope.MasterPage.IsLoading = false;
                    });
                return defer.promise;
            };
            //#endregion

            //#region ReadUserInRoleById
            var ReadUserInRoleById = (Id) => {
                let defer = $q.defer();
                $rootScope.MasterPage.IsLoading = true;
                let strApiEndPoint = CommonHelper.UserUrl + "EditRoles/" + Id;
                ApiHelper.GetMethod(strApiEndPoint)
                    .then(function (response) {
                        $rootScope.MasterPage.IsLoading = false;
                        $scope.UserInRole = response.Data;
                        defer.resolve(response);
                    })
                    .catch(function (response) {
                        sys.Alert(false, response.Message);
                        defer.reject(response);
                        $rootScope.MasterPage.IsLoading = false;
                    });
                return defer.promise;
            };
            //#endregion

            //#region Create
            $scope.Create = function () {
                $scope.UpdateMode = false;
                $scope.User = {};
                $('#PnModal').appendTo("body").modal('show');
            };
            //#endregion

            //#region Update
            $scope.Update = function (Id) {
                $scope.UpdateMode = true;
                ReadById(Id);
                $('#PnModal').appendTo("body").modal('show');
            }
            //#endregion

            //#region ChangeBlockUsers
            $scope.ChangeBlockout = function (Id) {
                swal({
                    title: "Xác nhận thay đổi trạng thái tài khoản?",
                    text: "Thay đổi từ ngưng hoạt động => hoạt động, và ngược lại",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                    .then((willDelete) => {
                        if (willDelete) {
                            ReadById(Id).then(function (response) {
                                $rootScope.MasterPage.IsLoading = true;
                                //mặc định lock user
                                let strApiEndPoint = CommonHelper.UserUrl + "LockUser/" + Id;
                                if ($scope.User.LockoutEnabled) {
                                    strApiEndPoint = CommonHelper.UserUrl + "UnlockUser/" + Id;
                                }
                                ApiHelper.PostMethod(strApiEndPoint)
                                    .then(function (response) {
                                        $rootScope.MasterPage.IsLoading = false;
                                        $('#tblData').DataTable().ajax.reload(null, false);
                                        sys.Alert(true, '@CMS.StaticResources.Resources.MSG_TEXT_UPDATE_SUCCESS');
                                    })
                                    .catch(function (response) {
                                        sys.Alert(false, response.Message);
                                        $rootScope.MasterPage.IsLoading = false;
                                    });
                            })
                        }
                    });
            }

            //#region UserInRole
            $scope.ReadUserInRole = function (Id) {
                ReadUserInRoleById(Id);
                $('#UserInRoleModal').appendTo("body").modal('show');
            }
            //#endregion

            //#region Delete
            $scope.Delete = function (Id) {
                swal({
                    title: "Xác nhận xóa?",
                    text: "Một khi đã xóa, bạn không thể khôi phục lại",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                    .then((willDelete) => {
                        if (willDelete) {
                            $rootScope.MasterPage.IsLoading = true;
                            let strApiEndPoint = CommonHelper.UserUrl + "?id=" + Id;
                            ApiHelper.DeleteMethod(strApiEndPoint)
                                .then(function (response) {
                                    $rootScope.MasterPage.IsLoading = false;
                                    $('#tblData').DataTable().ajax.reload(null, false);
                                    sys.Alert(true, '@CMS.StaticResources.Resources.MSG_TEXT_DELETE_SUCCESS');
                                })
                                .catch(function (response) {
                                    sys.Alert(false, response.Message);
                                    $rootScope.MasterPage.IsLoading = false;
                                });
                        }
                    });
            };
            //#endregion

            //#region Save
            $scope.Save = function () {
                if (!$scope.UpdateMode) {
                    $rootScope.MasterPage.IsLoading = true;
                    let strApiEndPoint = CommonHelper.UserUrl + "Create";
                    ApiHelper.PostMethod(strApiEndPoint, $scope.User)
                        .then(function (response) {
                            $rootScope.MasterPage.IsLoading = false;
                            $('#tblData').DataTable().ajax.reload(null, false);
                            sys.Alert(true, '@CMS.StaticResources.Resources.MSG_TEXT_CREATE_SUCCESS');
                        })
                        .catch(function (response) {
                            sys.Alert(false, response.Message);
                            $rootScope.MasterPage.IsLoading = false;
                        });
                    $('#PnModal').appendTo("body").modal('hide');
                }
                else {
                    $rootScope.MasterPage.IsLoading = true;
                    let strApiEndPoint = CommonHelper.UserUrl + "Update";
                    ApiHelper.PutMethod(strApiEndPoint, $scope.User)
                        .then(function (response) {
                            $rootScope.MasterPage.IsLoading = false;
                            $('#tblData').DataTable().ajax.reload(null, false);
                            sys.Alert(true, '@CMS.StaticResources.Resources.MSG_TEXT_UPDATE_SUCCESS');
                        })
                        .catch(function (response) {
                            sys.Alert(false, response.Message);
                            $rootScope.MasterPage.IsLoading = false;
                        });
                    $('#PnModal').appendTo("body").modal('hide');
                }
            };
            //#endregion

            //#region Save UserInRole
            $scope.SaveUserInRole = function () {
                $rootScope.MasterPage.IsLoading = true;
                let SelectedRoles = [];
                $scope.UserInRole.UserRoles.forEach((item) => {
                    if (item.Selected) SelectedRoles.push(item.Value);
                });
                $scope.UserInRole.SelectedRoles = SelectedRoles;
                let strApiEndPoint = CommonHelper.UserUrl + "EditRoles";
                ApiHelper.PostMethod(strApiEndPoint, $scope.UserInRole)
                    .then(function (response) {
                        $rootScope.MasterPage.IsLoading = false;
                        $('#tblData').DataTable().ajax.reload(null, false);
                        sys.Alert(true, '@CMS.StaticResources.Resources.MSG_TEXT_UPDATE_SUCCESS');
                    })
                    .catch(function (response) {
                        sys.Alert(false, response.Message);
                        $rootScope.MasterPage.IsLoading = false;
                    });
                $('#UserInRoleModal').appendTo("body").modal('hide');
            };
            //#endregion

        }
        IndexController.$inject = ["$scope", "$rootScope", "$timeout", "$filter", "$compile", "ApiHelper", "CommonHelper", "$q"];
        addController("IndexController", IndexController);
    </script>
}
